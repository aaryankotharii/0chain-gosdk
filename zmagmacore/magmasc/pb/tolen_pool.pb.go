// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: zmagmacore/magmasc/pb/proto/tolen_pool.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// TokenPool represents token pool implementation.
type TokenPool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`                             // @gotags: json:"id"
	Balance   int64                  `protobuf:"varint,2,opt,name=balance,proto3" json:"balance"`                  // @gotags: json:"balance"
	HolderId  string                 `protobuf:"bytes,3,opt,name=holder_id,json=holderId,proto3" json:"holder_id"` // @gotags: json:"holder_id"
	PayeeId   string                 `protobuf:"bytes,4,opt,name=payee_id,json=payeeId,proto3" json:"payee_id"`    // @gotags: json:"payee_id"
	PayerId   string                 `protobuf:"bytes,5,opt,name=payer_id,json=payerId,proto3" json:"payer_id"`    // @gotags: json:"payer_id"
	Transfers []*TokenPoolTransfer   `protobuf:"bytes,6,rep,name=transfers,proto3" json:"transfers,omitempty"`
	ExpiredAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=expired_at,json=expiredAt,proto3" json:"expired_at,omitempty"`
}

func (x *TokenPool) Reset() {
	*x = TokenPool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zmagmacore_magmasc_pb_proto_tolen_pool_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenPool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenPool) ProtoMessage() {}

func (x *TokenPool) ProtoReflect() protoreflect.Message {
	mi := &file_zmagmacore_magmasc_pb_proto_tolen_pool_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenPool.ProtoReflect.Descriptor instead.
func (*TokenPool) Descriptor() ([]byte, []int) {
	return file_zmagmacore_magmasc_pb_proto_tolen_pool_proto_rawDescGZIP(), []int{0}
}

func (x *TokenPool) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TokenPool) GetBalance() int64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *TokenPool) GetHolderId() string {
	if x != nil {
		return x.HolderId
	}
	return ""
}

func (x *TokenPool) GetPayeeId() string {
	if x != nil {
		return x.PayeeId
	}
	return ""
}

func (x *TokenPool) GetPayerId() string {
	if x != nil {
		return x.PayerId
	}
	return ""
}

func (x *TokenPool) GetTransfers() []*TokenPoolTransfer {
	if x != nil {
		return x.Transfers
	}
	return nil
}

func (x *TokenPool) GetExpiredAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiredAt
	}
	return nil
}

// TokenPoolTransfer stores info about token transfers from pool to pool.
type TokenPoolTransfer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxnHash    string `protobuf:"bytes,1,opt,name=txn_hash,json=txnHash,proto3" json:"txn_hash,omitempty"`
	FromPool   string `protobuf:"bytes,2,opt,name=from_pool,json=fromPool,proto3" json:"from_pool,omitempty"`
	ToPool     string `protobuf:"bytes,3,opt,name=to_pool,json=toPool,proto3" json:"to_pool,omitempty"`
	Value      int64  `protobuf:"varint,4,opt,name=value,proto3" json:"value,omitempty"`
	FromClient string `protobuf:"bytes,5,opt,name=from_client,json=fromClient,proto3" json:"from_client,omitempty"`
	ToClient   string `protobuf:"bytes,6,opt,name=to_client,json=toClient,proto3" json:"to_client,omitempty"`
}

func (x *TokenPoolTransfer) Reset() {
	*x = TokenPoolTransfer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zmagmacore_magmasc_pb_proto_tolen_pool_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenPoolTransfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenPoolTransfer) ProtoMessage() {}

func (x *TokenPoolTransfer) ProtoReflect() protoreflect.Message {
	mi := &file_zmagmacore_magmasc_pb_proto_tolen_pool_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenPoolTransfer.ProtoReflect.Descriptor instead.
func (*TokenPoolTransfer) Descriptor() ([]byte, []int) {
	return file_zmagmacore_magmasc_pb_proto_tolen_pool_proto_rawDescGZIP(), []int{1}
}

func (x *TokenPoolTransfer) GetTxnHash() string {
	if x != nil {
		return x.TxnHash
	}
	return ""
}

func (x *TokenPoolTransfer) GetFromPool() string {
	if x != nil {
		return x.FromPool
	}
	return ""
}

func (x *TokenPoolTransfer) GetToPool() string {
	if x != nil {
		return x.ToPool
	}
	return ""
}

func (x *TokenPoolTransfer) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *TokenPoolTransfer) GetFromClient() string {
	if x != nil {
		return x.FromClient
	}
	return ""
}

func (x *TokenPoolTransfer) GetToClient() string {
	if x != nil {
		return x.ToClient
	}
	return ""
}

var File_zmagmacore_magmasc_pb_proto_tolen_pool_proto protoreflect.FileDescriptor

var file_zmagmacore_magmasc_pb_proto_tolen_pool_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x7a, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x6d, 0x61, 0x67,
	0x6d, 0x61, 0x73, 0x63, 0x2f, 0x70, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x6f,
	0x6c, 0x65, 0x6e, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11,
	0x7a, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x70, 0x62, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x73,
	0x63, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x87, 0x02, 0x0a, 0x09, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x6f, 0x6f, 0x6c,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x65, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x65, 0x65,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x42, 0x0a,
	0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x7a, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x70, 0x62, 0x2e, 0x6d, 0x61, 0x67,
	0x6d, 0x61, 0x73, 0x63, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x6f, 0x6f, 0x6c, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x73, 0x12, 0x39, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x74, 0x22, 0xb8, 0x01, 0x0a,
	0x11, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x6f, 0x6f, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x78, 0x6e, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x78, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1b, 0x0a,
	0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f,
	0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x50,
	0x6f, 0x6f, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x72, 0x6f,
	0x6d, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x66, 0x72, 0x6f, 0x6d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f,
	0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x42, 0x2f, 0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x30, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x67, 0x6f, 0x73,
	0x64, 0x6b, 0x2f, 0x7a, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x6d, 0x61,
	0x67, 0x6d, 0x61, 0x73, 0x63, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_zmagmacore_magmasc_pb_proto_tolen_pool_proto_rawDescOnce sync.Once
	file_zmagmacore_magmasc_pb_proto_tolen_pool_proto_rawDescData = file_zmagmacore_magmasc_pb_proto_tolen_pool_proto_rawDesc
)

func file_zmagmacore_magmasc_pb_proto_tolen_pool_proto_rawDescGZIP() []byte {
	file_zmagmacore_magmasc_pb_proto_tolen_pool_proto_rawDescOnce.Do(func() {
		file_zmagmacore_magmasc_pb_proto_tolen_pool_proto_rawDescData = protoimpl.X.CompressGZIP(file_zmagmacore_magmasc_pb_proto_tolen_pool_proto_rawDescData)
	})
	return file_zmagmacore_magmasc_pb_proto_tolen_pool_proto_rawDescData
}

var file_zmagmacore_magmasc_pb_proto_tolen_pool_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_zmagmacore_magmasc_pb_proto_tolen_pool_proto_goTypes = []interface{}{
	(*TokenPool)(nil),             // 0: zchain.pb.magmasc.TokenPool
	(*TokenPoolTransfer)(nil),     // 1: zchain.pb.magmasc.TokenPoolTransfer
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
}
var file_zmagmacore_magmasc_pb_proto_tolen_pool_proto_depIdxs = []int32{
	1, // 0: zchain.pb.magmasc.TokenPool.transfers:type_name -> zchain.pb.magmasc.TokenPoolTransfer
	2, // 1: zchain.pb.magmasc.TokenPool.expired_at:type_name -> google.protobuf.Timestamp
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_zmagmacore_magmasc_pb_proto_tolen_pool_proto_init() }
func file_zmagmacore_magmasc_pb_proto_tolen_pool_proto_init() {
	if File_zmagmacore_magmasc_pb_proto_tolen_pool_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_zmagmacore_magmasc_pb_proto_tolen_pool_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenPool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zmagmacore_magmasc_pb_proto_tolen_pool_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenPoolTransfer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_zmagmacore_magmasc_pb_proto_tolen_pool_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_zmagmacore_magmasc_pb_proto_tolen_pool_proto_goTypes,
		DependencyIndexes: file_zmagmacore_magmasc_pb_proto_tolen_pool_proto_depIdxs,
		MessageInfos:      file_zmagmacore_magmasc_pb_proto_tolen_pool_proto_msgTypes,
	}.Build()
	File_zmagmacore_magmasc_pb_proto_tolen_pool_proto = out.File
	file_zmagmacore_magmasc_pb_proto_tolen_pool_proto_rawDesc = nil
	file_zmagmacore_magmasc_pb_proto_tolen_pool_proto_goTypes = nil
	file_zmagmacore_magmasc_pb_proto_tolen_pool_proto_depIdxs = nil
}
